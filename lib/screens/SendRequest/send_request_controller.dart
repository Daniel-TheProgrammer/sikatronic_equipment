import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:flutter_email_sender/flutter_email_sender.dart';
import 'package:get/get.dart';
import 'package:intl/intl.dart';
import 'package:uuid/uuid.dart';

class SendRequestController extends GetxController {
  var date = DateFormat().add_yMd().format(DateTime.now()).obs;
  var time = TimeOfDay(
          hour: int.parse(DateFormat('HH').format(DateTime.now())),
          minute: int.parse(DateFormat('mm').format(DateTime.now())))
      .obs;
  var errorToDb = false.obs;
  datePicker(DateTime datepicked) {
    return date.value = DateFormat().add_yMd().format(datepicked);
  }

  timePicker(TimeOfDay timepicked) {
    return time.value = timepicked;
  }

  saveDataInDb({
    String? name,
    String? availableToCallDate,
    String? availableToCallTime,
    String? email,
    String? phone,
    String? description,
  }) async {
    //cid = client id
    String cid = FirebaseAuth.instance.currentUser!.uid;
    //rid = request id generated by Uuid library
    String rid = Uuid().v4();
    String now = DateFormat().format(DateTime.now());
    CollectionReference requests =
        FirebaseFirestore.instance.collection('requests');

    await requests.doc(rid).set({
      'cid': cid,
      'rid': rid,
      'submittedAt': now,
      'name': name,
      'availableToCallDate': availableToCallDate,
      'availableToCallTime': availableToCallTime,
      'email': email,
      'phone': phone,
      'description': description,
    }).catchError((e) {
      errorToDb.value = true;
    }).then((value) async {
      String body =
          '$description  \n \n from $email \n  available to call on $availableToCallDate ,$availableToCallTime \n phone number : $phone  ';
      Email _email = Email(
        subject: name!,
        recipients: ['sikatronicsequipments@gmail.com'],
        body: body,
         isHTML : false,
      );
      await FlutterEmailSender.send(_email).catchError((e) {
        print('error of email sending is $e');
        errorToDb.value = true;
      });
    });
  }
}
